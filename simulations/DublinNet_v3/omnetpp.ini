[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
image-path = ../../images
#network = simulationDublin.simulations.DublinNet_v3.MultiMec_v3

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = false

sim-time-limit = 30s

**.routingRecorder.enabled = false
**.scalar-recording = false
**.vector-recording = false
#**.param-recording=false
#**.statistic-recording=false

*.playgroundSizeX = 12191.01m
*.playgroundSizeY = 9653.66m
*.playgroundSizeZ = 50m  

**.veinsManager.bounds.x = 0
**.veinsManager.bounds.y = 0
**.veinsManager.bounds.width = 4149.11
**.veinsManager.bounds.height = 2494.27

############### CA configuration ################# 
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u=0}
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[0].numBands = ${numRbs=100}

*.gNodeB*.cellularNic.numCarriers = 1
*.gNodeB*.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.numCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0
*.mmecHost[*].virtualisationInfrastructure.cellularNic.numCarriers = 1
*.mmecHost[*].virtualisationInfrastructure.cellularNic.nrChannelModel[0].componentCarrierIndex = 0
**.tolerateMaxDistViolation=true#initially the cellular will band to o base station and then optimal the selection
############### General PHY parameters ##############
#**.downlink_interference = true
#**.uplink_interference = false
#**.ueTxPower = 50
#**.eNodeBTxPower = 46
#**.targetBler = 0.01
#**.blerShift = 5  
#**.fbPeriod = 20   # reports CQI every 40ms



##########################################################
#                      Mobility                          #
##########################################################
#*.ue[*].mobility.typename = "VeinsInetMobility"


##########################################################
#          Mobile network specific parameters            #
##########################################################

# Number of Resource Blocks
**.numBands = 25

## Transmission Power
#**.ueTxPower = 26
#**.eNodeBTxPower = 46

# Enable dynamic association of UEs (based on best SINR)
*.ue[*].cellularNic.nrPhy.dynamicCellAssociation = true
*.mmecHost[*].upf_mec.cellularNic.nrPhy.dynamicCellAssociation = true
*.mmecHost[*].virtualisationInfrastructure.cellularNic.nrPhy.dynamicCellAssociation = true
#*.ue[*].masterId = 0     # ignored if dynamic association is disabled
#*.ue[*].macCellId = 0    # ignored if dynamic association is disabled
#*.ue[*].nrMasterId = 1     # ignored if dynamic association is disabled
#*.ue[*].nrMacCellId = 1    # ignored if dynamic association is disabled
*.ue[*].macCellId = 0
*.ue[*].masterId = 0
*.ue[*].nrMacCellId = 1
*.ue[*].nrMasterId = 1

# Enable handover
#**.enableHandover = true
#*.ue[*].cellularNic.nrPhy.enableHandover = true
#*.gNodeB*.cellularNic.phy.enableHandover = true
*.gNodeB*.cellularNic.phy.handoverLatency = 50ms
*.gNodeB*.cellInfo.broadcastMessageInterval = 10s # eNB will sends broadcast triggers every second

# X2 and SCTP configuration
*.gNodeB*.numX2Apps = 2    # one x2App per peering eNodeB
*.gNodeB*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gNodeB*.txPower = 40mw
#**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
#**.sctp.enableHeartbeats = false

*.gNodeB1.x2App[1].client.connectAddress = "gNodeB2%x2ppp0"
*.gNodeB2.x2App[1].client.connectAddress = "gNodeB3%x2ppp0"
*.gNodeB3.x2App[1].client.connectAddress = "gNodeB4%x2ppp0"
*.gNodeB4.x2App[1].client.connectAddress = "gNodeB5%x2ppp0"
*.gNodeB5.x2App[1].client.connectAddress = "gNodeB6%x2ppp0"
*.gNodeB6.x2App[1].client.connectAddress = "gNodeB7%x2ppp0"
*.gNodeB7.x2App[1].client.connectAddress = "gNodeB8%x2ppp0"
*.gNodeB8.x2App[1].client.connectAddress = "gNodeB9%x2ppp0"
*.gNodeB9.x2App[1].client.connectAddress = "gNodeB10%x2ppp0"
*.gNodeB10.x2App[1].client.connectAddress = "gNodeB11%x2ppp0"
*.gNodeB11.x2App[1].client.connectAddress = "gNodeB12%x2ppp0"
*.gNodeB12.x2App[1].client.connectAddress = "gNodeB13%x2ppp0"
*.gNodeB13.x2App[1].client.connectAddress = "gNodeB14%x2ppp0"
*.gNodeB14.x2App[1].client.connectAddress = "gNodeB15%x2ppp0"
*.gNodeB15.x2App[1].client.connectAddress = "gNodeB16%x2ppp0"
*.gNodeB16.x2App[1].client.connectAddress = "gNodeB17%x2ppp0"
*.gNodeB17.x2App[1].client.connectAddress = "gNodeB18%x2ppp0"
*.gNodeB18.x2App[1].client.connectAddress = "gNodeB19%x2ppp0"
*.gNodeB19.x2App[1].client.connectAddress = "gNodeB20%x2ppp0"
*.gNodeB20.x2App[1].client.connectAddress = "gNodeB21%x2ppp0"
*.gNodeB21.x2App[1].client.connectAddress = "gNodeB22%x2ppp0"
*.gNodeB22.x2App[1].client.connectAddress = "gNodeB23%x2ppp0"
*.gNodeB23.x2App[1].client.connectAddress = "gNodeB24%x2ppp0"
*.gNodeB24.x2App[1].client.connectAddress = "gNodeB25%x2ppp0"
*.gNodeB25.x2App[1].client.connectAddress = "gNodeB26%x2ppp0"
*.gNodeB26.x2App[1].client.connectAddress = "gNodeB27%x2ppp0"
*.gNodeB27.x2App[1].client.connectAddress = "gNodeB28%x2ppp0"
*.gNodeB28.x2App[1].client.connectAddress = "gNodeB29%x2ppp0"
*.gNodeB29.x2App[1].client.connectAddress = "gNodeB30%x2ppp0"
*.gNodeB30.x2App[1].client.connectAddress = "gNodeB31%x2ppp0"
*.gNodeB31.x2App[1].client.connectAddress = "gNodeB32%x2ppp0"
*.gNodeB32.x2App[1].client.connectAddress = "gNodeB33%x2ppp0"
*.gNodeB33.x2App[1].client.connectAddress = "gNodeB34%x2ppp0"
*.gNodeB34.x2App[1].client.connectAddress = "gNodeB35%x2ppp0"
*.gNodeB35.x2App[1].client.connectAddress = "gNodeB36%x2ppp0"
*.gNodeB36.x2App[1].client.connectAddress = "gNodeB37%x2ppp0"
*.gNodeB37.x2App[1].client.connectAddress = "gNodeB38%x2ppp0"
*.gNodeB38.x2App[1].client.connectAddress = "gNodeB39%x2ppp0"
*.gNodeB39.x2App[1].client.connectAddress = "gNodeB40%x2ppp0"
*.gNodeB40.x2App[1].client.connectAddress = "gNodeB41%x2ppp0"
*.gNodeB41.x2App[1].client.connectAddress = "gNodeB42%x2ppp0"
*.gNodeB42.x2App[1].client.connectAddress = "gNodeB43%x2ppp0"
*.gNodeB43.x2App[1].client.connectAddress = "gNodeB44%x2ppp0"
*.gNodeB44.x2App[1].client.connectAddress = "gNodeB45%x2ppp0"
*.gNodeB45.x2App[1].client.connectAddress = "gNodeB46%x2ppp0"
*.gNodeB46.x2App[1].client.connectAddress = "gNodeB47%x2ppp0"
*.gNodeB47.x2App[1].client.connectAddress = "gNodeB48%x2ppp0"
*.gNodeB48.x2App[1].client.connectAddress = "gNodeB49%x2ppp0"
*.gNodeB49.x2App[1].client.connectAddress = "gNodeB50%x2ppp0"
*.gNodeB50.x2App[1].client.connectAddress = "gNodeB1%x2ppp0"

*.gNodeB1.x2App[0].client.connectAddress = "gNodeB50%x2ppp1"
*.gNodeB2.x2App[0].client.connectAddress = "gNodeB1%x2ppp1"
*.gNodeB3.x2App[0].client.connectAddress = "gNodeB2%x2ppp1"
*.gNodeB4.x2App[0].client.connectAddress = "gNodeB3%x2ppp1"
*.gNodeB5.x2App[0].client.connectAddress = "gNodeB4%x2ppp1"
*.gNodeB6.x2App[0].client.connectAddress = "gNodeB5%x2ppp1"
*.gNodeB7.x2App[0].client.connectAddress = "gNodeB6%x2ppp1"
*.gNodeB8.x2App[0].client.connectAddress = "gNodeB7%x2ppp1"
*.gNodeB9.x2App[0].client.connectAddress = "gNodeB8%x2ppp1"
*.gNodeB10.x2App[0].client.connectAddress = "gNodeB9%x2ppp1"
*.gNodeB11.x2App[0].client.connectAddress = "gNodeB10%x2ppp1"
*.gNodeB12.x2App[0].client.connectAddress = "gNodeB11%x2ppp1"
*.gNodeB13.x2App[0].client.connectAddress = "gNodeB12%x2ppp1"
*.gNodeB14.x2App[0].client.connectAddress = "gNodeB13%x2ppp1"
*.gNodeB15.x2App[0].client.connectAddress = "gNodeB14%x2ppp1"
*.gNodeB16.x2App[0].client.connectAddress = "gNodeB15%x2ppp1"
*.gNodeB17.x2App[0].client.connectAddress = "gNodeB16%x2ppp1"
*.gNodeB18.x2App[0].client.connectAddress = "gNodeB17%x2ppp1"
*.gNodeB19.x2App[0].client.connectAddress = "gNodeB18%x2ppp1"
*.gNodeB20.x2App[0].client.connectAddress = "gNodeB19%x2ppp1"
*.gNodeB21.x2App[0].client.connectAddress = "gNodeB20%x2ppp1"
*.gNodeB22.x2App[0].client.connectAddress = "gNodeB21%x2ppp1"
*.gNodeB23.x2App[0].client.connectAddress = "gNodeB22%x2ppp1"
*.gNodeB24.x2App[0].client.connectAddress = "gNodeB23%x2ppp1"
*.gNodeB25.x2App[0].client.connectAddress = "gNodeB24%x2ppp1"
*.gNodeB26.x2App[0].client.connectAddress = "gNodeB25%x2ppp1"
*.gNodeB27.x2App[0].client.connectAddress = "gNodeB26%x2ppp1"
*.gNodeB28.x2App[0].client.connectAddress = "gNodeB27%x2ppp1"
*.gNodeB29.x2App[0].client.connectAddress = "gNodeB28%x2ppp1"
*.gNodeB30.x2App[0].client.connectAddress = "gNodeB29%x2ppp1"
*.gNodeB31.x2App[0].client.connectAddress = "gNodeB30%x2ppp1"
*.gNodeB32.x2App[0].client.connectAddress = "gNodeB31%x2ppp1"
*.gNodeB33.x2App[0].client.connectAddress = "gNodeB32%x2ppp1"
*.gNodeB34.x2App[0].client.connectAddress = "gNodeB33%x2ppp1"
*.gNodeB35.x2App[0].client.connectAddress = "gNodeB34%x2ppp1"
*.gNodeB36.x2App[0].client.connectAddress = "gNodeB35%x2ppp1"
*.gNodeB37.x2App[0].client.connectAddress = "gNodeB36%x2ppp1"
*.gNodeB38.x2App[0].client.connectAddress = "gNodeB37%x2ppp1"
*.gNodeB39.x2App[0].client.connectAddress = "gNodeB38%x2ppp1"
*.gNodeB40.x2App[0].client.connectAddress = "gNodeB39%x2ppp1"
*.gNodeB41.x2App[0].client.connectAddress = "gNodeB40%x2ppp1"
*.gNodeB42.x2App[0].client.connectAddress = "gNodeB41%x2ppp1"
*.gNodeB43.x2App[0].client.connectAddress = "gNodeB42%x2ppp1"
*.gNodeB44.x2App[0].client.connectAddress = "gNodeB43%x2ppp1"
*.gNodeB45.x2App[0].client.connectAddress = "gNodeB44%x2ppp1"
*.gNodeB46.x2App[0].client.connectAddress = "gNodeB45%x2ppp1"
*.gNodeB47.x2App[0].client.connectAddress = "gNodeB46%x2ppp1"
*.gNodeB48.x2App[0].client.connectAddress = "gNodeB47%x2ppp1"
*.gNodeB49.x2App[0].client.connectAddress = "gNodeB48%x2ppp1"
*.gNodeB50.x2App[0].client.connectAddress = "gNodeB49%x2ppp1"
##
#*.gNodeB1.x2App[1].client.connectAddress = "gNodeB2%x2ppp0"
#*.gNodeB2.x2App[1].client.connectAddress = "gNodeB3%x2ppp0"
#*.gNodeB3.x2App[1].client.connectAddress = "gNodeB4%x2ppp0"
#*.gNodeB4.x2App[1].client.connectAddress = "gNodeB5%x2ppp0"
#*.gNodeB5.x2App[1].client.connectAddress = "gNodeB6%x2ppp0"
#.....
#
#*.gNodeB2.x2App[0].client.connectAddress = "gNodeB1%x2ppp1"
#*.gNodeB3.x2App[0].client.connectAddress = "gNodeB2%x2ppp1"
#*.gNodeB4.x2App[0].client.connectAddress = "gNodeB3%x2ppp1"
#*.gNodeB5.x2App[0].client.connectAddress = "gNodeB4%x2ppp1"
#*.gNodeB6.x2App[0].client.connectAddress = "gNodeB5%x2ppp1"
#....
###############################################################################################################################################
###############################################################################################################################################
###############################################################################################################################################
###############################################################################################################################################
###############################################################################################################################################
num-rngs = 3
############### IPv4 configurator config #################
#*.configurator.config = xmldoc("./demo.xml")
*.configurator.assignAddresses = true
*.configurator.assignUniqueAddresses = true
*.configurator.addStaticRoutes = true
*.configurator.dumpTopology = true
*.configurator.dumpRoutes = true



#unhandled node type: 4 -- in module (IP2Nic) MultiMec.mmecHost[0].upf_mec.cellularNic.ip2nic (id=739), at t=0.1s, event #489
#the parameter nodetype of ip2nic is UPF_MEC
#node type: can be ENODEB, GNODEB, UE
#solved by changing nodeType parameter of upf module's submodule cellular


#Module not found on path 'MultiMec.mmecHost[0].ipv4.routingTable' defined by par 'MultiMec.mmecHost[0].upf_mec.cellularNic.ip2nic.routingTableModule' 
#-- in module (IP2Nic) MultiMec.mmecHost[0].upf_mec.cellularNic.ip2nic (id=739), at t=0.1s, event #489
#upf_mec.**.routingTableModule = default(absPath(".ipv4.routingTable"));


#Has no ancestor parameter called 'extHostAddress' 
#-- in module (LteMacUeD2D) MultiMec.mmecHost[0].upf_mec.cellularNic.mac (id=742), at t=0.1s, event #489
#solved through added a parameter extHostAddress in module upf refered to 'ue'


#L3AddressResolver: Cannot resolve address `MultiMec.mmecHost[0].virtualisationInfrastructure' 
#-- in module (VirtualisationInfrastructureManager) MultiMec.mmecHost[0].vim (id=659), at t=0.1s, event #489
#virtualisationInfrastructure.ipv4.configurator.typename = "HostAutoConfigurator";

############ MEC Configuration ############
**.hasRNISupport = true

# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.nagleEnvirtualisationInfrastructureabled = false
**.tcp.mss = 1452

# MEC Services
# MEC host 1 services configurations
#*.mmecHost[*].mecPlatform.numMecServices = 1
#*.mmecHost[*].mecPlatform.mecService[0].typename = "RNIService"
#*.mmecHost[*].mecPlatform.mecService[0].localAddress = "mmecHost[" +string(ancestorIndex(2)) + "].virtualisationInfrastructure"
#*.mmecHost[*].mecPlatform.mecService[0].localPort = 10020
#*.mmecHost[*].mecPlatform.serviceRegistry.localAddress = "mmecHost[" + string(ancestorIndex(2)) + "].virtualisationInfrastructure"
#*.mmecHost[*].mecPlatform.serviceRegistry.localPort = 10021
#LocationService is already present in MEC host mmecHost! 




#Has no ancestor parameter called 'macNodeId' -- in module (NRPdcpRrcUe) MultiMec.mmecHost[0].upf_mec.cellularNic.pdcpRrc (id=740), at t=0.1s, event #489
*.mmecHost[*].upf_mec.masterId = 0 
*.mmecHost[*].upf_mec.macCellId = 0 
*.mmecHost[*].upf_mec.nrMasterId = 1
*.mmecHost[*].upf_mec.nrMacCellId = 1 
*.mmecHost[*].virtualisationInfrastructure.masterId = 0 
*.mmecHost[*].virtualisationInfrastructure.macCellId = 0 
*.mmecHost[*].virtualisationInfrastructure.nrMasterId = 1
*.mmecHost[*].virtualisationInfrastructure.nrMacCellId = 1 
#*.mmecHost[*].virtualisationInfrastructure.ipv4.forwarding = true
#*.mmecHost[*].upf_mec.cellularNic.nrPhy.enableHandover = true
#base stations list
*.mmecHost[*].bsList = "gNodeB1, gNodeB2, gNodeB3, gNodeB4, gNodeB5, gNodeB6, gNodeB7, gNodeB8, gNodeB9, gNodeB10, gNodeB11, gNodeB12, gNodeB13, gNodeB14, gNodeB15, gNodeB16, gNodeB17, gNodeB18, gNodeB19, gNodeB20, gNodeB21, gNodeB22, gNodeB23, gNodeB24, gNodeB25, gNodeB26, gNodeB27, gNodeB28, gNodeB29, gNodeB30, gNodeB31, gNodeB32, gNodeB33, gNodeB34, gNodeB35, gNodeB36, gNodeB37, gNodeB38, gNodeB39, gNodeB40, gNodeB41, gNodeB42, gNodeB43, gNodeB44, gNodeB45, gNodeB46, gNodeB47, gNodeB48, gNodeB49, gNodeB50"

############### MEC Host configurator config #################
# Mobile MEC Hosts
*.mmecHost[*].mecPlatformManager.mecOrchestrator = "mecOrchestrator"


# MEC Hosts
**.mecHost*.virtualisationInfrastructure.ipv4.forwarding = true
*.mecHost*.maxMECApps = 10					# max ME Apps to instantiate
*.mecHost*.maxRam = uniform(1GB,10GB)				# max KBytes of Ram 
*.mecHost*.maxDisk = uniform(1GB,2GB)					# max KBytes of Disk Space 
*.mecHost*.maxCpuSpeed = uniform(100,500)		    	# max CPU
#*.mecHost2.maxCpuSpeed = 500				# max CPU

# Mobile MEC Hosts
**.mmecHost*.virtualisationInfrastructure.ipv4.forwarding = true
*.mmecHost*.maxMECApps = 10					# max ME Apps to instantiate
*.mmecHost*.maxRam = uniform(0.5GB,5GB)					# max KBytes of Ram 
*.mmecHost*.maxDisk = uniform(0.5GB,1GB)					# max KBytes of Disk Space 
*.mmecHost*.maxCpuSpeed = uniform(50,250)		    	# max CPU
#*.mecHost2.maxCpuSpeed = 500				# max CPU

# MEC Services
# MEC host 1 services configurations
#*.mecHost1.mecPlatform.numMecServices = 1
#*.mecHost1.mecPlatform.mecService[0].typename = "RNIService"
#*.mecHost1.mecPlatform.mecService[0].localAddress = "mecHost1.virtualisationInfrastructure"
#*.mecHost1.mecPlatform.mecService[0].localPort = 10020
#*.mecHost1.mecPlatform.serviceRegistry.localAddress = "mecHost1.virtualisationInfrastructure"
#*.mecHost1.mecPlatform.serviceRegistry.localPort = 10021
#
## MEC host 2 services configurations
#*.mecHost2.mecPlatform.numMecServices = 1
#*.mecHost2.mecPlatform.mecService[0].typename = "RNIService"
#*.mecHost2.mecPlatform.mecService[0].localAddress = "mecHost2.virtualisationInfrastructure" 
#*.mecHost2.mecPlatform.mecService[0].localPort = 10020
#*.mecHost2.mecPlatform.serviceRegistry.localAddress = "mecHost2.virtualisationInfrastructure" 
#*.mecHost2.mecPlatform.serviceRegistry.localPort = 10021
#
## random number generators configuration
#*.mecHost*.mecPlatform.serviceRegistry.rng-0 = 0 # request service time
#*.mecHost*.mecPlatform.serviceRegistry.rng-1 = 1 # subscription service time
#*.mecHost*.mecPlatform.mecService[0].rng-0 = 1 # request service time
#*.mecHost*.mecPlatform.mecService[0].rng-1 = 2 # subscription service time
#*.mecHost*.mecPlatform.mecService[0].requestServiceTime = 4ms
#*.mecHost*.mecPlatform.mecService[0].subscriptionServiceTime = 11us


*.mecHost*.bsList = "gNodeB1, gNodeB2, gNodeB3, gNodeB4, gNodeB5, gNodeB6, gNodeB7, gNodeB8, gNodeB9, gNodeB10, gNodeB11, gNodeB12, gNodeB13, gNodeB14, gNodeB15, gNodeB16, gNodeB17, gNodeB18, gNodeB19, gNodeB20, gNodeB21, gNodeB22, gNodeB23, gNodeB24, gNodeB25, gNodeB26, gNodeB27, gNodeB28, gNodeB29, gNodeB30, gNodeB31, gNodeB32, gNodeB33, gNodeB34, gNodeB35, gNodeB36, gNodeB37, gNodeB38, gNodeB39, gNodeB40, gNodeB41, gNodeB42, gNodeB43, gNodeB44, gNodeB45, gNodeB46, gNodeB47, gNodeB48, gNodeB49, gNodeB50"

# MEC Orchestrator configuration
*.mecOrchestrator.mecHostList = "mecHost1, mecHost2, mecHost3, mecHost4, mecHost5, mecHost6, mecHost7, mecHost8, mecHost9, mecHost10, mecHost11, mecHost12"              # MEC hosts associated to the MEC system
*.mecOrchestrator.selectionPolicy = "OptimalSelectionBased"
*.mecOrchestrator.mecHostIndex = 1
*.mecOrchestrator.mecApplicationPackageList = "ResponseApp"   # List of MEC app descriptors to be onboarded at 
*.mecHost*.mecPlatformManager.mecOrchestrator = "mecOrchestrator" # the MECPM needs to know the MEC orchestrator


###############################################################################################################################################
###############################################################################################################################################
###############################################################################################################################################
###############################################################################################################################################
###############################################################################################################################################


###############################################################################################################################################
###############################################################################################################################################
###############################################################################################################################################
###############################################################################################################################################
###############################################################################################################################################

############# Client App configuration ################

#------------RequestResponseApp---------------
*.ue[*].numApps = 3
*.ue[*].app[0].typename = "DeviceApp"#compute at mechost
*.ue[*].app[0].localPort = 4500
*.ue[*].app[0].UALCMPAddress = "ualcmp"
*.ue[*].app[0].UALCMPPort = 1000
*.ue[*].app[0].appPackageSource = "ApplicationDescriptors/ResponseApp.json"

*.ue[*].app[1].typename = "UERequestApp"#compute at local
*.ue[*].app[1].deviceAppAddress = "ue["+string(ancestorIndex(1))+"]"
*.ue[*].app[1].deviceAppPort = 4500
*.ue[*].app[1].startTime = 1s										
*.ue[*].app[1].stopTime = 7200s
*.ue[*].app[1].period = 5s
	
*.ue[*].app[2].typename = "UELatencyApp"#compute at local
*.ue[*].app[2].deviceAppAddress = "ue["+string(ancestorIndex(1))+"]"
*.ue[*].app[2].period = 0.5s

**.numIndependentMecApp = 1
*.mecHost*.independentMecApp[0].typename = "MECLatencyApp"
*.mecHost*.independentMecApp[0].period = 2s
*.mmecHost*.independentMecApp[0].typename = "MMECLatencyApp"
*.mmecHost*.independentMecApp[0].period = 0.5s
*.mmecHost*.upf_mec.withcellular = true

#**.ipv4.configurator.typename = "Ipv4NetworkConfigurator"
#*.upf*.ipv4.configurator.typename = "Ipv4NetworkConfigurator"

#**.responseTime.result-recording-modes = vector, mean, stats
#**.processingTime.result-recording-modes = vector, mean, stats
#**.serviceResponseTime.result-recording-modes = vector, mean, stats
#**.upLinkTime.result-recording-modes = vector, mean, stats
#**.downLinkTime.result-recording-modes = vector, mean, stats

[Config Random]
*.mecOrchestrator.algorithmName = "Random"
#network = simulationDublin.simulations.DublinNet_v3.MultiMec_v3

##########################################################
#            VeinsManager paramut the -x flag value inside quoteseters                     #
##########################################################
*.veinsManager.host = "localhost"       # if traci-launchd runs on localhost
#*.veinsManager.host = "sumo"       # traci-launchd on different host/container
#*.veinsManager.moduleType = "bus_bus=simulationdublin.mobile_MEC.mmecHost *=simulationdublin.mobile_MEC.mobileUe"
#*.veinsManager.moduleName = "bus_bus=mmecHost *=ue"
*.veinsManager.moduleType = "veh_passenger=simu5g.nodes.mec.mobileMec.mobileUe *=simu5g.nodes.mec.mobileMec.mmecHost"
*.veinsManager.moduleName = "veh_passenger=ue *=mmecHost"
*.veinsManager.moduleDisplayString= "veh_passenger='i=device/pocketpc;is=vs' *='i=device/server2;is=vs'"
*.veinsManager.launchConfig = xmldoc("dublin.launchd.xml")
*.veinsManager.updateInterval = 1s

[Config BestFit]
*.mecOrchestrator.algorithmName = "BestFit"
#network = simulationDublin.simulations.DublinNet_v3.MultiMec_v3

##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost"       # if traci-launchd runs on localhost
#*.veinsManager.host = "sumo"       # traci-launchd on different host/container
#*.veinsManager.moduleType = "bus_bus=simulationdublin.mobile_MEC.mmecHost *=simulationdublin.mobile_MEC.mobileUe"
#*.veinsManager.moduleName = "bus_bus=mmecHost *=ue"
*.veinsManager.moduleType = "veh_passenger=simu5g.nodes.mec.mobileMec.mobileUe *=simu5g.nodes.mec.mobileMec.mmecHost"
*.veinsManager.moduleName = "veh_passenger=ue *=mmecHost"
*.veinsManager.moduleDisplayString= "veh_passenger='i=device/pocketpc;is=vs' *='i=device/server2;is=vs'"
*.veinsManager.launchConfig = xmldoc("dublin.launchd.xml")
*.veinsManager.updateInterval = 1s

[Config MaxFit]
*.mecOrchestrator.algorithmName = "MaxFit"
#network = simulationDublin.simulations.DublinNet_v3.MultiMec_v3

##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost"       # if traci-launchd runs on localhost
#*.veinsManager.host = "sumo"       # traci-launchd on different host/container
#*.veinsManager.moduleType = "bus_bus=simulationdublin.mobile_MEC.mmecHost *=simulationdublin.mobile_MEC.mobileUe"
#*.veinsManager.moduleName = "bus_bus=mmecHost *=ue"
*.veinsManager.moduleType = "veh_passenger=simu5g.nodes.mec.mobileMec.mobileUe *=simu5g.nodes.mec.mobileMec.mmecHost"
*.veinsManager.moduleName = "veh_passenger=ue *=mmecHost"
*.veinsManager.moduleDisplayString= "veh_passenger='i=device/pocketpc;is=vs' *='i=device/server2;is=vs'"
*.veinsManager.launchConfig = xmldoc("dublin.launchd.xml")
*.veinsManager.updateInterval = 1s

[Config ClosestFit]
*.mecOrchestrator.algorithmName = "ClosestFit"

##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost"       # if traci-launchd runs on localhost
#*.veinsManager.host = "sumo"       # traci-launchd on different host/container
#*.veinsManager.moduleType = "bus_bus=simulationdublin.mobile_MEC.mmecHost *=simulationdublin.mobile_MEC.mobileUe"
#*.veinsManager.moduleName = "bus_bus=mmecHost *=ue"
*.veinsManager.moduleType = "veh_passenger=simu5g.nodes.mec.mobileMec.mobileUe *=simu5g.nodes.mec.mobileMec.mmecHost"
*.veinsManager.moduleName = "veh_passenger=ue *=mmecHost"
*.veinsManager.moduleDisplayString= "veh_passenger='i=device/pocketpc;is=vs' *='i=device/server2;is=vs'"
*.veinsManager.launchConfig = xmldoc("dublin.launchd.xml")
*.veinsManager.updateInterval = 1s

[Config MultiOpt]
*.mecOrchestrator.algorithmName = "MultiOpt"

##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost"       # if traci-launchd runs on localhost
#*.veinsManager.host = "sumo"       # traci-launchd on different host/container
#*.veinsManager.moduleType = "bus_bus=simulationdublin.mobile_MEC.mmecHost *=simulationdublin.mobile_MEC.mobileUe"
#*.veinsManager.moduleName = "bus_bus=mmecHost *=ue"
*.veinsManager.moduleType = "veh_passenger=simu5g.nodes.mec.mobileMec.mobileUe *=simu5g.nodes.mec.mobileMec.mmecHost"
*.veinsManager.moduleName = "veh_passenger=ue *=mmecHost"
*.veinsManager.moduleDisplayString= "veh_passenger='i=device/pocketpc;is=vs' *='i=device/server2;is=vs'"
*.veinsManager.launchConfig = xmldoc("dublin.launchd.xml")
*.veinsManager.updateInterval = 1s


[Config HHO]
*.mecOrchestrator.algorithmName = "HHO"

##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost"       # if traci-launchd runs on localhost
#*.veinsManager.host = "sumo"       # traci-launchd on different host/container
#*.veinsManager.moduleType = "bus_bus=simulationdublin.mobile_MEC.mmecHost *=simulationdublin.mobile_MEC.mobileUe"
#*.veinsManager.moduleName = "bus_bus=mmecHost *=ue"
*.veinsManager.moduleType = "veh_passenger=simu5g.nodes.mec.mobileMec.mobileUe *=simu5g.nodes.mec.mobileMec.mmecHost"
*.veinsManager.moduleName = "veh_passenger=ue *=mmecHost"
*.veinsManager.moduleDisplayString= "veh_passenger='i=device/pocketpc;is=vs' *='i=device/server2;is=vs'"
*.veinsManager.launchConfig = xmldoc("dublin.launchd.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_100_Random]
*.mecOrchestrator.algorithmName = "Random"
network = simulationDublin.simulations.SPSim.StaticNodes
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "*=simu5g.nodes.mec.mobileMec.mobileUe"
*.veinsManager.moduleName = "*=ue"
*.veinsManager.moduleDisplayString= "*='i=device/pocketpc;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd_static.xml")
*.veinsManager.updateInterval = 1s


[Config Static_Nodes_100_BestFit]
*.mecOrchestrator.algorithmName = "BestFit"
network = simulationDublin.simulations.SPSim.StaticNodes
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "*=simu5g.nodes.mec.mobileMec.mobileUe"
*.veinsManager.moduleName = "*=ue"
*.veinsManager.moduleDisplayString= "*='i=device/pocketpc;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd_static.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_100_ClosestFit]
*.mecOrchestrator.algorithmName = "ClosestFit"
network = simulationDublin.simulations.SPSim.StaticNodes
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "*=simu5g.nodes.mec.mobileMec.mobileUe"
*.veinsManager.moduleName = "*=ue"
*.veinsManager.moduleDisplayString= "*='i=device/pocketpc;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd_static.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_300_Random]
*.mecOrchestrator.algorithmName = "Random"
network = simulationDublin.simulations.SPSim.Static_300
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "*=simu5g.nodes.mec.mobileMec.mobileUe"
*.veinsManager.moduleName = "*=ue"
*.veinsManager.moduleDisplayString= "*='i=device/pocketpc;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd_static.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_300_BestFit]
*.mecOrchestrator.algorithmName = "BestFit"
network = simulationDublin.simulations.SPSim.Static_300
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "*=simu5g.nodes.mec.mobileMec.mobileUe"
*.veinsManager.moduleName = "*=ue"
*.veinsManager.moduleDisplayString= "*='i=device/pocketpc;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd_static.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_300_ClosestFit]
*.mecOrchestrator.algorithmName = "ClosestFit"
network = simulationDublin.simulations.SPSim.Static_300
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "*=simu5g.nodes.mec.mobileMec.mobileUe"
*.veinsManager.moduleName = "*=ue"
*.veinsManager.moduleDisplayString= "*='i=device/pocketpc;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd_static.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_500_Random]
*.mecOrchestrator.algorithmName = "Random"
network = simulationDublin.simulations.SPSim.Static_500
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "*=simu5g.nodes.mec.mobileMec.mobileUe"
*.veinsManager.moduleName = "*=ue"
*.veinsManager.moduleDisplayString= "*='i=device/pocketpc;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd_static.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_500_BestFit]
*.mecOrchestrator.algorithmName = "BestFit"
network = simulationDublin.simulations.SPSim.Static_500
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "*=simu5g.nodes.mec.mobileMec.mobileUe"
*.veinsManager.moduleName = "*=ue"
*.veinsManager.moduleDisplayString= "*='i=device/pocketpc;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd_static.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_500_ClosestFit]
*.mecOrchestrator.algorithmName = "ClosestFit"
network = simulationDublin.simulations.SPSim.Static_500
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "*=simu5g.nodes.mec.mobileMec.mobileUe"
*.veinsManager.moduleName = "*=ue"
*.veinsManager.moduleDisplayString= "*='i=device/pocketpc;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd_static.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_70_Mobile_30_Random]
*.mecOrchestrator.algorithmName = "Random"
network = simulationDublin.simulations.SPSim.MobileNodes
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "veh_passenger=simu5g.nodes.mec.mobileMec.mobileUe *=simu5g.nodes.mec.mobileMec.mmecHost"
*.veinsManager.moduleName = "veh_passenger=ue *=mmecHost"
*.veinsManager.moduleDisplayString= "veh_passenger='i=device/pocketpc;is=vs' *='i=device/server2;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_70_Mobile_30_BestFit]
*.mecOrchestrator.algorithmName = "BestFit"
network = simulationDublin.simulations.SPSim.MobileNodes
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost"
*.veinsManager.moduleType = "veh_passenger=simu5g.nodes.mec.mobileMec.mobileUe *=simu5g.nodes.mec.mobileMec.mmecHost"
*.veinsManager.moduleName = "veh_passenger=ue *=mmecHost"
*.veinsManager.moduleDisplayString= "veh_passenger='i=device/pocketpc;is=vs' *='i=device/server2;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_70_Mobile_30_ClosestFit]
*.mecOrchestrator.algorithmName = "ClosestFit"
network = simulationDublin.simulations.SPSim.MobileNodes
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost"
*.veinsManager.moduleType = "veh_passenger=simu5g.nodes.mec.mobileMec.mobileUe *=simu5g.nodes.mec.mobileMec.mmecHost"
*.veinsManager.moduleName = "veh_passenger=ue *=mmecHost"
*.veinsManager.moduleDisplayString= "veh_passenger='i=device/pocketpc;is=vs' *='i=device/server2;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_210_Mobile_90_Random]
*.mecOrchestrator.algorithmName = "Random"
network = simulationDublin.simulations.SPSim.Static_210
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "veh_passenger=simu5g.nodes.mec.mobileMec.mobileUe *=simu5g.nodes.mec.mobileMec.mmecHost"
*.veinsManager.moduleName = "veh_passenger=ue *=mmecHost"
*.veinsManager.moduleDisplayString= "veh_passenger='i=device/pocketpc;is=vs' *='i=device/server2;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd_static_210_mobile_90.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_210_Mobile_90_BestFit]
*.mecOrchestrator.algorithmName = "BestFit"
network = simulationDublin.simulations.SPSim.Static_210
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "veh_passenger=simu5g.nodes.mec.mobileMec.mobileUe *=simu5g.nodes.mec.mobileMec.mmecHost"
*.veinsManager.moduleName = "veh_passenger=ue *=mmecHost"
*.veinsManager.moduleDisplayString= "veh_passenger='i=device/pocketpc;is=vs' *='i=device/server2;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd_static_210_mobile_90.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_210_Mobile_90_ClosestFit]
*.mecOrchestrator.algorithmName = "ClosestFit"
network = simulationDublin.simulations.SPSim.Static_210
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "veh_passenger=simu5g.nodes.mec.mobileMec.mobileUe *=simu5g.nodes.mec.mobileMec.mmecHost"
*.veinsManager.moduleName = "veh_passenger=ue *=mmecHost"
*.veinsManager.moduleDisplayString= "veh_passenger='i=device/pocketpc;is=vs' *='i=device/server2;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd_static_210_mobile_90.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_350_Mobile_150_Random]
*.mecOrchestrator.algorithmName = "Random"
network = simulationDublin.simulations.SPSim.Static_350
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "veh_passenger=simu5g.nodes.mec.mobileMec.mobileUe *=simu5g.nodes.mec.mobileMec.mmecHost"
*.veinsManager.moduleName = "veh_passenger=ue *=mmecHost"
*.veinsManager.moduleDisplayString= "veh_passenger='i=device/pocketpc;is=vs' *='i=device/server2;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd_static_350_mobile_150.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_350_Mobile_150_BestFit]
*.mecOrchestrator.algorithmName = "BestFit"
network = simulationDublin.simulations.SPSim.Static_350
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "veh_passenger=simu5g.nodes.mec.mobileMec.mobileUe *=simu5g.nodes.mec.mobileMec.mmecHost"
*.veinsManager.moduleName = "veh_passenger=ue *=mmecHost"
*.veinsManager.moduleDisplayString= "veh_passenger='i=device/pocketpc;is=vs' *='i=device/server2;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd_static_350_mobile_150.xml")
*.veinsManager.updateInterval = 1s

[Config Static_Nodes_350_Mobile_150_ClosestFit]
*.mecOrchestrator.algorithmName = "ClosestFit"
network = simulationDublin.simulations.SPSim.Static_350
##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost" 
*.veinsManager.moduleType = "veh_passenger=simu5g.nodes.mec.mobileMec.mobileUe *=simu5g.nodes.mec.mobileMec.mmecHost"
*.veinsManager.moduleName = "veh_passenger=ue *=mmecHost"
*.veinsManager.moduleDisplayString= "veh_passenger='i=device/pocketpc;is=vs' *='i=device/server2;is=vs'"
*.veinsManager.launchConfig = xmldoc("./dublin.launchd_static_350_mobile_150.xml")
*.veinsManager.updateInterval = 1s
